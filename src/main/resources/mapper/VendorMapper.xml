<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mypms.mapper.VendorMapper">
    <select id="getAllDemands" resultType="com.example.mypms.model.ProcurementDemand">
        select pdid,
               p_uid,
               product_name,
               amount,
               expire_time,
               start_time,
               remark,
               uid as p_uid,
               uname
        from pd
                 inner join purchaser p on pd.p_uid = p.uid
        where expire_time > now()
        limit #{size} offset #{offset}
    </select>
    <select id="getAllDemandsCount" resultType="int">
        select count(*)
        from pd
        where expire_time > now()
    </select>

    <insert id="addQuote" parameterType="com.example.mypms.model.Quote">
        insert into quote (p_id, v_uid, amount, total_price, remark)
        values (#{p_id}, #{v_uid}, #{amount}, #{total_price}, #{remark})
    </insert>

    <select id="getQuotesByUid" resultType="com.example.mypms.model.Quote">
        select *
        from quote
        where v_uid = #{v_uid}
        limit #{size} offset #{offset}
    </select>
    <select id="getQuotesCountByUid" resultType="int">
        select count(*)
        from quote
        where v_uid = #{v_uid}
    </select>

    <delete id="deleteQuote">
        delete
        from quote
        where qid = #{qid}
          and v_uid = #{v_uid}
    </delete>

    <select id="getProcurementsByUid" resultType="com.example.mypms.model.Procurement">
        select pid,
               qid,
               pdid,
               status,
               start_time,
               p_uid,
               p_name,
               product_name,
               amount,
               total_price,
               cname,
               cpath,
               cexpire_time,
               remark
        from processing
        where v_uid = #{v_uid}
          and status > 0
          and 8 > processing.status
        limit #{size} offset #{offset}
    </select>
    <select id="getProcurementsCountByUid" resultType="int">
        select count(*)
        from processing
        where v_uid = #{v_uid}
          and status > 0
          and 8 > processing.status
    </select>

    <select id="getPurchaserByUid" resultType="com.example.mypms.model.Purchaser">
        select uid, uname, email, rate, rate_num
        from purchaser
        where uid = #{uid}
        limit 1
    </select>

    <select id="getStatusByPidAndUid" resultType="int">
        select status
        from processing
        where pid = #{pid}
          and v_uid = #{uid}
    </select>

    <update id="updateContract">
        update procurement
        set cname        = #{filename},
            cpath        = #{path},
            cexpire_time = #{expire_time},
            status       = 3
        where pid = #{pid}
    </update>

    <select id="getContractPathAndName" parameterType="int" resultType="com.example.mypms.model.Contract">
        select cpath as path, cname as name
        from procurement
        where pid = #{pid}
    </select>

    <delete id="deleteProcurement">
        delete
        from procurement
        where pid = #{pid}
          and status = 2
    </delete>

    <select id="getProcurementsCountByPidAndUid">
        select count(*)
        from processing
        where pid = #{pid}
          and v_uid = #{uid}
    </select>

    <update id="nextStep">
        update procurement
        set status = #{current_status} + 1
        where pid = #{pid}
          and status = #{current_status}
    </update>

    <select id="getPuidByPid" resultType="java.lang.String">
        select p_uid
        from processing
        where pid = #{pid}
          and status > 0
          and 8 > processing.status
    </select>

    <update id="updateRate">
        update purchaser
        set rate     = (rate * rate_num + #{rate}) / (rate_num + 1),
            rate_num = rate_num + 1
        where uid = #{uid}
    </update>

    <update id="finishProcurement">
        update procurement
        set status = -1
        where pid = #{pid}
    </update>
</mapper>